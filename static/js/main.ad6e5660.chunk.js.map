{"version":3,"sources":["Section/Section.js","FeedBackOptions/FeedBackOptions.js","Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedBackOptions","onLeaveFeedback","onClick","e","Statistics","good","neutral","bad","total","percentage","App","state","CheckForAvailability","handleAdd","field","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","sum","Math","floor","this","options","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOASeA,EAPC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,iCACI,4BAAKD,GACJC,ICKMC,EARS,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAF,OACpB,6BACI,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAgB,UAAtC,QACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAgB,aAAtC,WACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAgB,SAAtC,SCMOG,EAVI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,WAA7B,OACf,6BACI,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,EAAMH,EAAMC,EAASC,IAChC,iDAAuBE,EAAWJ,EAAMC,EAASC,EAAKC,GAAtD,OC2DOE,E,4MA3DdC,MAAQ,CACPN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNK,qBAAuB,WAAO,IAAD,iBACQ,EAAKD,OAAjCN,EADoB,EACpBA,KAAMC,EADc,EACdA,QAASC,EADK,EACLA,IACvB,GAAa,IAATF,GAA0B,IAAZC,GAAyB,IAARC,EAClC,OAAO,G,EAITM,UAAY,SAAAC,GACX,EAAKC,UAAS,SAACC,GACd,OAAO,eACNF,EAAQE,EAAUF,GAAS,O,EAM9BG,mBAAqB,SAACZ,EAAMC,EAASC,GACpC,OAAQF,EAAOE,EAAMD,G,EAGtBY,gCAAkC,SAACb,EAAMC,EAASC,GACjD,IAAMY,EAAMd,EAAOC,EAAUC,EAC7B,OAAOa,KAAKC,MAAa,IAAPhB,EAAac,I,uDAGtB,IAAD,iBAC4BG,KAAKX,OAAjCN,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACvB,OACC,kBAAC,WAAD,KACC,kBAAC,EAAD,CAAST,MAAO,yBACf,kBAAC,EAAD,CACIyB,QAASD,KAAKX,MACjBV,gBAAiBqB,KAAKT,aAGxB,kBAAC,EAAD,CAASf,MAAO,eACkB,IAAhCwB,KAAKV,uBACL,kBAAC,EAAD,CACCP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKL,mBACZR,WAAYa,KAAKJ,kCAGlB,sD,GAtDYM,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ad6e5660.chunk.js","sourcesContent":["import React from 'react' \r\n \r\nconst Section = ({title, children}) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default Section","import React from 'react' \r\n\r\nconst FeedBackOptions = ({onLeaveFeedback}) => (\r\n    <div>\r\n        <button onClick={e => onLeaveFeedback('good')}>Good</button>\r\n        <button onClick={e => onLeaveFeedback('neutral')}>Neutral</button>\r\n        <button onClick={e => onLeaveFeedback('bad')}>Bad</button>\r\n    </div>\r\n);\r\n\r\nexport default FeedBackOptions","import React from 'react'\r\n\r\nconst Statistics = ({good, neutral, bad, total, percentage}) => (\r\n    <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total(good, neutral, bad)}</p>\r\n        <p>Positive feedback: {percentage(good, neutral, bad, total)}%</p>\r\n    </div>\r\n);\r\n\r\nexport default Statistics","import React, { Component, Fragment } from 'react';\nimport Section from './Section/Section';\nimport FeedBackOptions from './FeedBackOptions/FeedBackOptions';\nimport Statistics from './Statistics/Statistics';\n\nclass App extends Component {\n\n\n\tstate = {\n\t\tgood: 0,\n\t\tneutral: 0,\n\t\tbad: 0\n\t};\n\n\tCheckForAvailability = () => {\n\t\tconst { good, neutral, bad } = { ...this.state };\n\t\tif (good === 0 && neutral === 0 && bad === 0) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\thandleAdd = field => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t[field]: prevState[field] + 1\n\t\t\t};\n\t\t});\n\t}\n\n\n\tcountTotalFeedback = (good, neutral, bad) => {\n\t\treturn  good + bad + neutral;\n\t};\n\n\tcountPositiveFeedbackPercentage = (good, neutral, bad) => {\n\t\tconst sum = good + neutral + bad;\n\t\treturn Math.floor(good * 100 / sum);\n\t};\n\n\trender() {\n\t\tconst { good, neutral, bad } = { ...this.state };\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Section title={'Please leave feedback'}>\n\t\t\t\t\t<FeedBackOptions\n\t\t\t\t\t    options={this.state}\n\t\t\t\t\t\tonLeaveFeedback={this.handleAdd}\n\t\t\t\t\t/>\n\t\t\t\t</Section>\n\t\t\t\t<Section title={'Statistics'}>\n\t\t\t\t\t{this.CheckForAvailability() !== false ? (\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={this.countTotalFeedback}\n\t\t\t\t\t\t\tpercentage={this.countPositiveFeedbackPercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No feedback given</p>\n\t\t\t\t\t)}\n\t\t\t\t</Section>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}